#!/usr/bin/env bash

set -euo pipefail

TMP_DIR=${1:-/tmp/trivy_output_files}
TRIVY_PREVIOUS_OUTPUT_FILE_DIRECTORY=${2:-trivy_output_files}
POPULAR_CONTAINERS_VULNERABILITY_CHECKS_TABLE_FILE=${3:-container-vulnerability-table.md}
POPULAR_CONTAINERS_VULNERABILITY_CHECKS_README_FILE=${4:-README.md}

CONTAINERS=(
  "docker.io/debian:buster-slim"
  "docker.io/debian:stable-slim"
  "docker.io/node:18-alpine"
  "docker.io/node:latest"
  "docker.io/node:slim"
  "docker.io/openjdk:20-oracle"
  "docker.io/openjdk:20-slim"
  "docker.io/openjdk:latest"
  "docker.io/php:latest"
  "docker.io/python:alpine"
  "docker.io/python:slim"
  "docker.io/ruby:alpine"
  "docker.io/ruby:latest"
  "docker.io/ruby:slim"
  "docker.io/ubuntu:latest"
  "gcr.io/distroless/base-debian11:latest"
  "gcr.io/distroless/java-debian11:latest"
  "gcr.io/distroless/nodejs-debian11:latest"
  "gcr.io/distroless/python3-debian11:latest"
  "gcr.io/distroless/static-debian11:latest"
  "gcr.io/distroless/static:latest"
  "registry.access.redhat.com/ubi9-micro:latest"
  "registry.access.redhat.com/ubi9-minimal:latest"
  "registry.access.redhat.com/ubi9/nodejs-16-minimal:latest"
  "registry.access.redhat.com/ubi9/nodejs-16:latest"
  "registry.access.redhat.com/ubi9/openjdk-11-runtime:latest"
  "registry.access.redhat.com/ubi9/php-80:latest"
  "registry.access.redhat.com/ubi9/python-39:latest"
  "registry.access.redhat.com/ubi9/ruby-30:latest"
  "registry.access.redhat.com/ubi9/ubi:latest"
)

test -d "${TMP_DIR}" || mkdir "${TMP_DIR}"
test -d "${TRIVY_PREVIOUS_OUTPUT_FILE_DIRECTORY}" || mkdir "${TRIVY_PREVIOUS_OUTPUT_FILE_DIRECTORY}"

CONTAINERS_DATA=()
# In case you are not running inside GitHub Actions, where GITHUB_STEP_SUMMARY is always defined
[[ -n ${GITHUB_STEP_SUMMARY+z} ]] || GITHUB_STEP_SUMMARY="${TMP_DIR}/GITHUB_STEP_SUMMARY"

COUNTER=0
for CONTAINER in "${CONTAINERS[@]}"; do
  echo "* ${CONTAINER}"
  docker pull "${CONTAINER}" > /dev/null

  TRIVY_OUTPUT_FILE="${TMP_DIR}/${CONTAINER//\//_}"
  TRIVY_PREVIOUS_OUTPUT_FILE="${TRIVY_PREVIOUS_OUTPUT_FILE_DIRECTORY}/${CONTAINER//\//_}"

  trivy image --quiet --security-checks vuln --vuln-type os "${CONTAINER}" --output "${TRIVY_OUTPUT_FILE}"

  TRIVY_OUTPUT_FILE_CRITICAL=$(sed -n 's/^Total:.*CRITICAL: \([0-9]*\).*/\1/p' "${TRIVY_OUTPUT_FILE}")
  TRIVY_OUTPUT_FILE_TOTAL=$(grep '^Total:' "${TRIVY_OUTPUT_FILE}")

  if [[ -f "${TRIVY_PREVIOUS_OUTPUT_FILE}" ]]; then
    TRIVY_PREVIOUS_OUTPUT_FILE_CRITICAL=$(sed -n 's/^Total:.*CRITICAL: \([0-9]*\).*/\1/p' "${TRIVY_PREVIOUS_OUTPUT_FILE}")
  else
    TRIVY_PREVIOUS_OUTPUT_FILE_CRITICAL="0"
  fi

  if [[ "${TRIVY_OUTPUT_FILE_CRITICAL}" != "${TRIVY_PREVIOUS_OUTPUT_FILE_CRITICAL}" ]]; then
    COUNTER=$((COUNTER + 1))
    CONTAINER_REPO_TAGS=$(docker inspect --format '{{ index .RepoTags 0 }}' "${CONTAINER}")
    CONTAINER_REPO_DIGESTS=$(docker inspect --format '{{ index .RepoDigests 0 }}' "${CONTAINER}")
    # Copy current Trivy file to the git repository to be committed later
    cp "${TRIVY_OUTPUT_FILE}" "${TRIVY_PREVIOUS_OUTPUT_FILE}"
    echo "${TRIVY_OUTPUT_FILE_TOTAL}"

    case "${CONTAINER}" in
    "docker.io"*)
      # https://hub.docker.com/layers/library/debian/sid-slim/images/sha256-744464ba95b3ca63e9084ab66ab90f923ccd8b464824314aaa4c54f237030a4a?context=explore
      CONTAINER_ID=$(docker inspect --format '{{ .Id }}' "${CONTAINER}")
      DOCKER_HUB_PATH=$(echo "${CONTAINER##*/}" | tr : /)
      CONTAINERS_DATA+=("- [${CONTAINER}](https://hub.docker.com/layers/library/${DOCKER_HUB_PATH}/images/${CONTAINER_ID/:/-}) | ${CONTAINER_REPO_DIGESTS}")
      ;;
    "gcr.io"*)
      CONTAINERS_DATA+=("- [${CONTAINER}](https://${CONTAINER_REPO_TAGS}) | [${CONTAINER_REPO_DIGESTS}](https://${CONTAINER_REPO_DIGESTS})")
      ;;
    "registry.access.redhat.com"*)
      CONTAINER_CONFIG_LABELS_RELEASE=$(docker inspect --format '{{ index .Config.Labels "release" }}' "${CONTAINER}")
      CONTAINER_CONFIG_LABELS_BUILD_DATE=$(docker inspect --format '{{ index .Config.Labels "build-date" }}' "${CONTAINER}")
      CONTAINERS_DATA+=("- ${CONTAINER} | ${CONTAINER_REPO_DIGESTS} | Release: ${CONTAINER_CONFIG_LABELS_RELEASE} | Build date: ${CONTAINER_CONFIG_LABELS_BUILD_DATE}")
      ;;
    *)
      echo "Unsupported image registry: ${CONTAINER} !!!"
      exit 1
      ;;
    esac
  else
    CONTAINERS_DATA+=("")
  fi
done

echo -e "\n*** Total \"${COUNTER}\" new CRITICAL vulnerabilities found.\n"

# Commit README + Trivy files only when new Critical vulnerability was found
if [[ ${COUNTER} -ne 0 ]]; then

  if [[ ! -f "${POPULAR_CONTAINERS_VULNERABILITY_CHECKS_TABLE_FILE}" ]]; then
    # First line - Date + Containers
    echo -n "| Date |" > "${POPULAR_CONTAINERS_VULNERABILITY_CHECKS_TABLE_FILE}"
    for CONTAINER in "${CONTAINERS[@]}"; do
      echo -n " ${CONTAINER} |" >> "${POPULAR_CONTAINERS_VULNERABILITY_CHECKS_TABLE_FILE}"
    done

    # Second line - separator
    echo -en "\n| --- |" >> "${POPULAR_CONTAINERS_VULNERABILITY_CHECKS_TABLE_FILE}"
    for CONTAINER in "${CONTAINERS[@]}"; do
      echo -n " --- |" >> "${POPULAR_CONTAINERS_VULNERABILITY_CHECKS_TABLE_FILE}"
    done
    echo >> "${POPULAR_CONTAINERS_VULNERABILITY_CHECKS_TABLE_FILE}"
  fi

  echo -e "\n## $(date +%F)\n" | tee -a "${GITHUB_STEP_SUMMARY}" >> "${POPULAR_CONTAINERS_VULNERABILITY_CHECKS_README_FILE}"
  echo -n "| $(date +%F) |" >> "${POPULAR_CONTAINERS_VULNERABILITY_CHECKS_TABLE_FILE}"

  COUNTER=-1
  for DATA in "${CONTAINERS_DATA[@]}"; do
    COUNTER=$((COUNTER + 1))
    TRIVY_OUTPUT_FILE="${TMP_DIR}/${CONTAINERS[${COUNTER}]//\//_}"
    TRIVY_OUTPUT_FILE_TOTAL=$(grep '^Total:' "${TRIVY_OUTPUT_FILE}")

    if [[ "${DATA}" != "" ]]; then
      echo "${DATA}" | tee -a "${GITHUB_STEP_SUMMARY}" >> "${POPULAR_CONTAINERS_VULNERABILITY_CHECKS_README_FILE}"
      echo "  ${TRIVY_OUTPUT_FILE_TOTAL}" | tee -a "${GITHUB_STEP_SUMMARY}" >> "${POPULAR_CONTAINERS_VULNERABILITY_CHECKS_README_FILE}"
      echo -en " ${TRIVY_OUTPUT_FILE_TOTAL} |" >> "${POPULAR_CONTAINERS_VULNERABILITY_CHECKS_TABLE_FILE}"
    else
      echo -en " |" >> "${POPULAR_CONTAINERS_VULNERABILITY_CHECKS_TABLE_FILE}"
    fi
  done
  echo >> "${POPULAR_CONTAINERS_VULNERABILITY_CHECKS_TABLE_FILE}"
fi
